{
  "extends": ["standard", "standard-jsx"],

  "parserOptions": {
    "ecmaVersion": 2019,
    "ecmaFeatures": {
      "jsx": true
    },
    "sourceType": "module"
  },

  "rules": {
    "dot-notation": ["error", { "allowKeywords": true }],
    "import/no-absolute-path": ["error", { "esmodule": true, "commonjs": true, "amd": false }],
    "indent": ["error", 2, {
      "SwitchCase": 1,
      "VariableDeclarator": 1,
      "outerIIFEBody": 1,
      "MemberExpression": 1,
      "FunctionDeclaration": { "parameters": 1, "body": 1 },
      "FunctionExpression": { "parameters": 1, "body": 1 },
      "CallExpression": { "arguments": 1 },
      "ArrayExpression": 1,
      "ObjectExpression": 1,
      "ImportDeclaration": 1,
      "flatTernaryExpressions": false,
      "ignoreComments": false,
      "ignoredNodes": ["TemplateLiteral > *"]
    }],
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "no-case-declarations": "error",
    "no-self-assign": ["error", { "props": true }],
    "no-void": "error",
    "object-curly-newline": ["error", { "multiline": true, "consistent": true }],
    "operator-linebreak": ["error", "after", { "overrides": { "?": "before", ":": "before", "|>": "before" } }],
    "quotes": ["error", "single", { "avoidEscape": true }],

    "react/jsx-closing-bracket-location": ["error", "tag-aligned"],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
    "react/jsx-curly-brace-presence": ["error", { "props": "never", "children": "never" }],
    "react/jsx-pascal-case": ["error", { "allowAllCaps": false }],
    "react/jsx-fragments": ["error", "syntax"],
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-tag-spacing": ["error", {
      "closingSlash": "never",
      "beforeSelfClosing": "always",
      "afterOpening": "never",
      "beforeClosing": "never"
    }],
    "react/jsx-wrap-multilines": ["error", {
      "declaration": "parens-new-line",
      "assignment": "parens-new-line",
      "return": "parens-new-line",
      "arrow": "parens-new-line",
      "condition": "parens-new-line",
      "logical": "ignore",
      "prop": "ignore"
    }]
  }
}
